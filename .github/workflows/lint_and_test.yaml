name: Lint and Test

on:
  push:
    branches: [main]
  pull_request:

# ensure that the workflow is only triggered once per PR,  subsequent pushes to the PR will cancel
# and restart the workflow. See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  SCCACHE_GHA_ENABLED: true
  RUSTC_WRAPPER: sccache
  CARGO_TERM_COLOR: always
  CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUSTFLAGS: "-C link-arg=-fuse-ld=mold"

jobs:
  spell_check:
    name: spell check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Check typos
        uses: crate-ci/typos@master

  toml_check:
    name: toml check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: mozilla-actions/sccache-action@v0.0.8
      - uses: rui314/setup-mold@v1
      - uses: taiki-e/install-action@v2
        with:
          tool: taplo-cli
      - name: Check toml format
        run: |
          taplo validate --colors never --no-schema
          taplo format --check --colors never

  crate_check:
    name: crate check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-machete
      - name: Check unused crate
        run: cargo machete

  build_lint:
    name: Build and Lint
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: mozilla-actions/sccache-action@v0.0.8
      - uses: rui314/setup-mold@v1
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-directories: |
            target
            ~/.cargo/git
            ~/.cargo/registry
          components: clippy,rustfmt
      - name: Lint
        run: |
          cargo fmt --all -- --check
          cargo clippy --all-targets -- -D warnings
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest
      - name: Build and archive tests
        run: cargo nextest archive --all --archive-file nextest-archive.tar.zst
      - name: Upload archive to workflow
        uses: actions/upload-artifact@v4
        with:
          name: nextest-archive
          path: nextest-archive.tar.zst

  test:
    needs: [build_lint]
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        partition: [1, 2, 3]
    steps:
      # The source directory must be checked out.
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: mkdir -p ~/.cargo/bin
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Download archive
        uses: actions/download-artifact@v4
        with:
          name: nextest-archive
      - name: Run tests
        run: |
          ~/.cargo/bin/cargo-nextest nextest run --archive-file nextest-archive.tar.zst \
            --partition count:${{ matrix.partition }}/3
      - name: Upload JUnit test results
        uses: actions/upload-artifact@v4
        with:
          name: junit-report-${{ matrix.partition }}
          path: target/nextest/default/junit.xml
